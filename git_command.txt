git config --global user.name "Your name"
git config --global user.email "email.@example.com"

git init
git add readme.txt
git commit -m "wrote a readme file"
git status
git diff readme.txt
git log
git log --pretty=oneline
git reset --hard HEAD^
git reset --hard HEAD~1
git reset --hard id
git reflog
git restore readme.txt
git restore --stage readme.txt 后
git restore readme.txt

rm readme.txt
git add readme.txt or git rm readme.txt
git commit -m "remove"

rm readme.txt
git restore readme.txt

ssh-keygen -t rsa -C "youremail@example.com"
isa.pub填入github ssh setting中
ssh -T git@github.com检测是否成功连接，wsl不能，其他能
github新建仓库，command line 调用
git remote add origin git@github.com:resetllh/learngit.git
git remote -v 可以查看
git remote rm origin 删除
git branch -M master 重命名当前分支
git push -u origin master

git clone git@github.com:resetllh/gitskills.git

git branch dev
git checkout dev
git checkout -b dev
git branch 看当前分支
git checkout master
git merge dev
merge出现冲突，要手动解决，之后 add commit
git branch -d dev

git log --graph --pretty=oneline --abbrev-commit

git merge --no-ff -m "merge with no-ff" dev
git stash
git stash list
git stash apply
git stash apply stash@{0}
git stash drop
git stash pop

git cherry-pick commit[id]

git branch -D filename 强行删除

git remote
git remote -v
git push origin master 将master的commit推送，
可改为dev，则在origin创建dev分支，并推送

git clone git@github.com:michaelliao/learngit.git
git branch 只有master
git checkout -b dev origin/dev 和远程dev相对应
git push origin dev

git pull
git branch --set-upstream-to=origin/<branch> dev
git pull
